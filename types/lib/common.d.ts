declare function _exports(cfg: any, deps: any): {
    SESSION_TOKEN_HEADER: string;
    TRACE_SESSION_HEADER: string;
    DIGEST_HEADER: string;
    STATUS_BAD_REQUEST: number;
    STATUS_UNAUTHORIZED: number;
    STATUS_UNAUTHORIZED_MSG: string;
    STATUS_OFFLINE: number;
    STATUS_OFFLINE_MSG: string;
    syncToken: (newToken: any) => void;
    getToken: () => any;
    setSessionTrace: (newTrace: any) => void;
    getSessionTrace: () => any;
    makeAPIUrl: (path: any, extra: any) => any;
    makeUploadUrl: (path: any, query: any) => any;
    makeDataUrl: (path: any, query: any) => any;
    makeExportUrl: (userId: any, query: any) => any;
    makeBlipUrl: (path: any, extra: any) => any;
    setBlipHost: (newhost: any) => void;
    setUploadHost: (newhost: any) => void;
    setDataHost: (newhost: any) => void;
    setApiHost: (newhost: any) => void;
    getUploadUrl: () => any;
    hasDataHost: () => boolean;
    handleHttpError: (res: any, cb: any) => any;
    assertArgumentsSize: (argumentsObj: any, length: any) => void;
    serviceCallChecks: (sadCb: any, happyCb: any) => any;
    appendUrlParamsFromOptions: (url: string, options: any, allowedParams: any) => string;
    serialize: (obj: any) => string;
    doGetWithToken: (path: any, codes: any, cb: any) => any;
    doPostWithToken: (path: any, data: any, codes: any, cb: any) => any;
    doPutWithToken: (path: any, data: any, codes: any, cb: any) => any;
    doPatchWithToken: (path: any, data: any, codes: any, cb: any) => any;
    doDeleteWithToken: (path: any, codes: any, cb: any) => any;
};
export = _exports;
